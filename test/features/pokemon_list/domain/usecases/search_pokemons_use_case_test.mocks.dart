// Mocks generated by Mockito 5.4.5 from annotations
// in pokeapi/test/features/pokemon_list/domain/usecases/search_pokemons_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pokeapi/core/domain/entities/pokemon.dart' as _i2;
import 'package:pokeapi/features/pokemon_list/domain/repositories/pokemon_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePokemon_0 extends _i1.SmartFake implements _i2.Pokemon {
  _FakePokemon_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [PokemonRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonRepository extends _i1.Mock implements _i3.PokemonRepository {
  MockPokemonRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.Pokemon>> getPokemons({
    int? offset = 0,
    int? limit = 20,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getPokemons, [], {
              #offset: offset,
              #limit: limit,
            }),
            returnValue: _i4.Future<List<_i2.Pokemon>>.value(<_i2.Pokemon>[]),
          )
          as _i4.Future<List<_i2.Pokemon>>);

  @override
  _i4.Future<_i2.Pokemon> getPokemonById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getPokemonById, [id]),
            returnValue: _i4.Future<_i2.Pokemon>.value(
              _FakePokemon_0(this, Invocation.method(#getPokemonById, [id])),
            ),
          )
          as _i4.Future<_i2.Pokemon>);

  @override
  _i4.Future<List<_i2.Pokemon>> searchPokemons(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchPokemons, [query]),
            returnValue: _i4.Future<List<_i2.Pokemon>>.value(<_i2.Pokemon>[]),
          )
          as _i4.Future<List<_i2.Pokemon>>);
}
